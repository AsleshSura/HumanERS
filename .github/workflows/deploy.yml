name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g html-minifier-terser
        npm install -g clean-css-cli
        npm install -g terser
        
    - name: Create optimized build
      run: |
        # Create build directory
        mkdir -p build
        
        # Copy and optimize HTML files
        html-minifier-terser --collapse-whitespace --remove-comments --minify-css --minify-js index.html -o build/index.html
        html-minifier-terser --collapse-whitespace --remove-comments --minify-css --minify-js launcher.html -o build/launcher.html
        
        # Copy and optimize CSS
        cleancss -o build/style.css style.css
        
        # Copy and optimize JavaScript
        terser script.js -o build/script.js --compress --mangle
        terser frontend.js -o build/frontend.js --compress --mangle
        
        # Copy other static files
        cp -r models/ build/ 2>/dev/null || echo "No models directory"
        
        # Create _config.yml for Jekyll
        echo "include: ['build/*']" > build/_config.yml
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
